{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAoBlD,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,+BCTfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGnC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,kCAAMA,EAAN,WCHOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAK,GACLa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAuB1C,OAhBAC,qBAAW,WAETxB,EAASC,GACRwB,MAAM,SAAAC,GAEHH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKf,CAACpB,IAIIqB,EDlB0BK,CAAc1B,GAAlCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAOrB,OACE,qCAEE,qBAAIJ,UAAU,sCAAd,cAAuDhB,EAAvD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAGEH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEvBXgB,EAAe,WAAM,MAGIzC,mBAAS,CAAC,cAHd,mBAGzB0C,EAHyB,KAGb3C,EAHa,KAUhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAACT,EAAS6B,GAAV,OACf,cAAC,EAAD,CAEC7B,SAAWA,GADLA,Y,MChBlB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cd706748.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      // console.log('Submit hecho');\r\n      setCategories( cats => [inputValue, ...cats,] );\r\n      setInputValue('');\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=54WSkjl5WYImmkKA7Pqpmg88r3WCyY0e`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url } ) => {\r\n\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInUp\">\r\n      <img src={url} alt={ title } />\r\n      <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  // const [images, setImages] = useState([]);\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  // useEffect( () => {\r\n  //   getGifs( categorys )\r\n  //   .then( setImages );\r\n  // }, [ category ])\r\n\r\n  return (\r\n    <>\r\n\r\n      <h3 className=\"animate__animated animate__fadeInUp\"> { category } </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> } \r\n      \r\n      { <div className=\"card-grid\">\r\n\r\n       {\r\n          images.map( img => (\r\n            <GifGridItem \r\n              key={ img.id }\r\n              { ...img }\r\n\r\n              />\r\n        ))\r\n       }\r\n\r\n    </div>}\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n    .then( imgs => {\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n      });\r\n      \r\n\r\n    })\r\n  },[category])\r\n\r\n\r\n  \r\n  return state; // { data:[], loading: true }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setcategories( ['HunterXHunter', ...categories] );\r\n  //   setcategories( cats => [...categories, 'HunterXHunter'] );\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories= { setCategories } />\r\n      <hr /> \r\n\r\n      <ol>\r\n        {\r\n          categories.map( (category,i) =>\r\n           <GifGrid\r\n            key={ category }\r\n            category={ category } />\r\n          )\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n// 54WSkjl5WYImmkKA7Pqpmg88r3WCyY0e","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}